"use strict";

const utils = require('./utils');

class MascotasException{
    constructor(errorMessage){
        this.errorMessage = errorMessage;
    }
}

class Mascota{
    constructor(nombre, genero, image,especie, raza, size, vacunas, edad, desparasitado, esterilizado, expediente){
        this._idPet = utils.generateUUID();
        this.nombre = nombre;
        this.genero = genero;
        this.image = image;
        this.especie = especie;
        this.raza = raza;
        this.size = size;
        this.vacunas = vacunas;
        this.edad = edad;
        this.desparasitado = desparasitado;
        this.esterilizado = esterilizado;
        this.expediente = expediente;
    }
    get idPet(){
        return this._idPet;
    }
    set idPet(value){
        throw new MascotasException('IdPets are autogenerated!');
    }
    set nombre(value){
        if(value == '' || typeof value !== 'string'){
            console.log(value);
            throw new MascotasException('Name must be a valid string and cannot be empty');
        }else{
            this._nombre = value;
        }
    }
    get nombre(){
        return this._nombre;
    }
    set genero(value){
        if(value === 'H' || value === 'M'){
            this._genero = value;
        }else{
            throw new MascotasException('Gender must be H or M');
        }
    }
    get image(){
        return this._image;
    }
    set image(value){
        this._image = value;
    }
    get genero(){
        return this._genero;
    }
    set especie(value){
        this._especie = value;
    }
    get especie(){
        return this._especie;
    }
    set raza(value){
        this._raza = value;
    }
    get raza(){
        return this._raza;
    }
    set size(value){
        this._size = value;
    }
    get size(){
        return this._size;
    }
    set vacunas(value){
        this._vacunas = value;
    }
    get vacunas(){
        return this._vacunas;
    }
    set edad(value){
        if(typeof value !== 'number'){
            throw new MascotasException('Edad must be a valid number');
        }else{
            this._edad= value;
        }
    }
    get edad(){
        return this._edad;
    }
    set desparasitado(value){
        this._desparasitado = value;
    }
    get desparasitado(){
        return this._desparasitado;
    }
    set esterilizado(value){
        this._esterilizado = value;
    }
    get esterilizado(){
        return this.esterilizado;
    }
    set expediente(value){
        this._expediente = value;
    }
    get expediente(){
        return this._expediente;
    }

    //Creamos m√©todos para interctuar con el servidor
    static createFromJSON(jsonValue){
        let obj = JSON.parse(jsonValue);
        return Mascota.createFromObject(obj);
    }

    static createFromObject(obj){
        let newPet = {};
        Object.assign(newPet, obj);//esto clona el obj principal
        Mascota.cleanObject(newPet);
        return new Mascota(newPet._nombre, newPet._genero, newPet._image, newPet._especie, newPet._raza, newPet._size, newPet._vacunas, newPet._edad, newPet._desparasitado, newPet._esterilizado, newPet._expediente);
    }
    static cleanObject(obj){
        const petProperties = ['_idPet','_nombre', '_genero', '_image','_especie', '_raza', '_size', '_vacunas', '_edad', '_desparasitado', '_esterilizado', '_expediente'];
        for (let property in obj) {
            if (!petProperties.includes(property)){
                delete obj[property];
            }
        }
    }
}

module.exports = Mascota;